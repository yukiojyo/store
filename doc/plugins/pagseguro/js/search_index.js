var search_data = {"index":{"longSearchIndex":["pagseguro","pagseguro::actioncontroller","pagseguro::developercontroller","pagseguro::faker","pagseguro::helper","pagseguro::installgenerator","pagseguro::missingconfigurationerror","pagseguro::missingenvironmenterror","pagseguro::notification","pagseguro::order","pagseguro::railtie","pagseguro::rake","pagseguro::utils","pagseguro::version","pagseguro::order#<<()","pagseguro::order#add()","pagseguro::notification#buyer()","pagseguro::faker#city()","pagseguro#config()","pagseguro#config?()","pagseguro#config_file()","pagseguro::installgenerator#copy_configuration_file()","pagseguro::developercontroller#create()","pagseguro::notification#denormalize()","pagseguro#developer?()","pagseguro::faker#email()","pagseguro::faker#full_name()","pagseguro#gateway_url()","pagseguro::order#id()","pagseguro::order#id=()","pagseguro::notification#mapping_for()","pagseguro::notification#method_missing()","pagseguro::faker#name()","pagseguro::notification::new()","pagseguro::order::new()","pagseguro::notification#normalize()","pagseguro::helper#pagseguro_form()","pagseguro::notification#payment_method()","pagseguro::faker#phone_number()","pagseguro::notification#processed_at()","pagseguro::notification#products()","pagseguro::order#reset!()","pagseguro::notification#respond_to?()","pagseguro::rake#run()","pagseguro::faker#secondary_address()","pagseguro::notification#shipping()","pagseguro::faker#state()","pagseguro::notification#status()","pagseguro::faker#street_name()","pagseguro::faker#surname()","pagseguro::notification#to_hash()","pagseguro::utils#to_iso8859()","pagseguro::utils#to_utf8()","pagseguro::notification#valid?()","pagseguro::faker#zipcode()"],"info":[["PagSeguro","","PagSeguro.html","",""],["PagSeguro::ActionController","","PagSeguro/ActionController.html","",""],["PagSeguro::DeveloperController","","PagSeguro/DeveloperController.html","",""],["PagSeguro::Faker","","PagSeguro/Faker.html","",""],["PagSeguro::Helper","","PagSeguro/Helper.html","",""],["PagSeguro::InstallGenerator","","PagSeguro/InstallGenerator.html","",""],["PagSeguro::MissingConfigurationError","","PagSeguro/MissingConfigurationError.html","",""],["PagSeguro::MissingEnvironmentError","","PagSeguro/MissingEnvironmentError.html","",""],["PagSeguro::Notification","","PagSeguro/Notification.html","",""],["PagSeguro::Order","","PagSeguro/Order.html","",""],["PagSeguro::Railtie","","PagSeguro/Railtie.html","",""],["PagSeguro::Rake","","PagSeguro/Rake.html","",""],["PagSeguro::Utils","","PagSeguro/Utils.html","",""],["PagSeguro::Version","","PagSeguro/Version.html","",""],["<<","PagSeguro::Order","PagSeguro/Order.html#method-i-3C-3C","(options)","<p>Add a new product to the PagSeguro order The allowed values are:\n<p>weight (Optional. If float, will be multiplied …\n"],["add","PagSeguro::Order","PagSeguro/Order.html#method-i-add","(options)",""],["buyer","PagSeguro::Notification","PagSeguro/Notification.html#method-i-buyer","()","<p>Return the buyer info.\n"],["city","PagSeguro::Faker","PagSeguro/Faker.html#method-i-city","()",""],["config","PagSeguro","PagSeguro.html#method-i-config","()","<p>Load configuration file.\n"],["config?","PagSeguro","PagSeguro.html#method-i-config-3F","()","<p>Check if configuration file exists.\n"],["config_file","PagSeguro","PagSeguro.html#method-i-config_file","()","<p>The path to the configuration file\n"],["copy_configuration_file","PagSeguro::InstallGenerator","PagSeguro/InstallGenerator.html#method-i-copy_configuration_file","()",""],["create","PagSeguro::DeveloperController","PagSeguro/DeveloperController.html#method-i-create","()",""],["denormalize","PagSeguro::Notification","PagSeguro/Notification.html#method-i-denormalize","(hash)","<p>Denormalize the specified hash converting all data to ISO-8859-1.\n"],["developer?","PagSeguro","PagSeguro.html#method-i-developer-3F","()","<p>Reader for the `developer` configuration\n"],["email","PagSeguro::Faker","PagSeguro/Faker.html#method-i-email","(base = nil)",""],["full_name","PagSeguro::Faker","PagSeguro/Faker.html#method-i-full_name","()",""],["gateway_url","PagSeguro","PagSeguro.html#method-i-gateway_url","()","<p>The gateway URL will point to a local URL is app is running in developer\nmode\n"],["id","PagSeguro::Order","PagSeguro/Order.html#method-i-id","()","<p>Get the order identifier\n"],["id=","PagSeguro::Order","PagSeguro/Order.html#method-i-id-3D","(identifier)","<p>Set the order identifier. Should be a unique value to identify this order\non your own application\n"],["mapping_for","PagSeguro::Notification","PagSeguro/Notification.html#method-i-mapping_for","(name)","<p>A wrapper to the params hash, sanitizing the return to symbols.\n"],["method_missing","PagSeguro::Notification","PagSeguro/Notification.html#method-i-method_missing","(method, *args)",""],["name","PagSeguro::Faker","PagSeguro/Faker.html#method-i-name","()",""],["new","PagSeguro::Notification","PagSeguro/Notification.html#method-c-new","(params, token = nil)","<p>Expects the params object from the current request. PagSeguro will send\nPOST with ISO-8859-1 encoded …\n"],["new","PagSeguro::Order","PagSeguro/Order.html#method-c-new","(order_id = nil)",""],["normalize","PagSeguro::Notification","PagSeguro/Notification.html#method-i-normalize","(hash)","<p>Normalize the specified hash converting all data to UTF-8.\n"],["pagseguro_form","PagSeguro::Helper","PagSeguro/Helper.html#method-i-pagseguro_form","(order, options = {})",""],["payment_method","PagSeguro::Notification","PagSeguro/Notification.html#method-i-payment_method","()","<p>Return the payment method. Will be mapped to the PAYMENT_METHOD constant.\n"],["phone_number","PagSeguro::Faker","PagSeguro/Faker.html#method-i-phone_number","(format = \"(##) ####-####\")",""],["processed_at","PagSeguro::Notification","PagSeguro/Notification.html#method-i-processed_at","()","<p>Parse the processing date to a Ruby object.\n"],["products","PagSeguro::Notification","PagSeguro/Notification.html#method-i-products","()","<p>Return a list of products sent by PagSeguro. The values will be normalized\n(e.g. currencies will be converted …\n"],["reset!","PagSeguro::Order","PagSeguro/Order.html#method-i-reset-21","()","<p>Remove all products from this order\n"],["respond_to?","PagSeguro::Notification","PagSeguro/Notification.html#method-i-respond_to-3F","(method, include_private = false)",""],["run","PagSeguro::Rake","PagSeguro/Rake.html#method-i-run","()",""],["secondary_address","PagSeguro::Faker","PagSeguro/Faker.html#method-i-secondary_address","()",""],["shipping","PagSeguro::Notification","PagSeguro/Notification.html#method-i-shipping","()","<p>Return the shipping fee. Will be converted to a float number.\n"],["state","PagSeguro::Faker","PagSeguro/Faker.html#method-i-state","()",""],["status","PagSeguro::Notification","PagSeguro/Notification.html#method-i-status","()","<p>Return the order status. Will be mapped to the STATUS constant.\n"],["street_name","PagSeguro::Faker","PagSeguro/Faker.html#method-i-street_name","()",""],["surname","PagSeguro::Faker","PagSeguro/Faker.html#method-i-surname","()",""],["to_hash","PagSeguro::Notification","PagSeguro/Notification.html#method-i-to_hash","()","<p>Return all useful properties in a single hash.\n"],["to_iso8859","PagSeguro::Utils","PagSeguro/Utils.html#method-i-to_iso8859","(string)",""],["to_utf8","PagSeguro::Utils","PagSeguro/Utils.html#method-i-to_utf8","(string)",""],["valid?","PagSeguro::Notification","PagSeguro/Notification.html#method-i-valid-3F","(force=false)","<p>Cache the validation. To bypass the cache, just provide an argument that is\nevaluated as true.\n\n<pre>invoice.valid? ...</pre>\n"],["zipcode","PagSeguro::Faker","PagSeguro/Faker.html#method-i-zipcode","()",""]],"searchIndex":["pagseguro","actioncontroller","developercontroller","faker","helper","installgenerator","missingconfigurationerror","missingenvironmenterror","notification","order","railtie","rake","utils","version","<<()","add()","buyer()","city()","config()","config?()","config_file()","copy_configuration_file()","create()","denormalize()","developer?()","email()","full_name()","gateway_url()","id()","id=()","mapping_for()","method_missing()","name()","new()","new()","normalize()","pagseguro_form()","payment_method()","phone_number()","processed_at()","products()","reset!()","respond_to?()","run()","secondary_address()","shipping()","state()","status()","street_name()","surname()","to_hash()","to_iso8859()","to_utf8()","valid?()","zipcode()"]}}